/*
 * This file is generated by jOOQ.
 */
package com.onedata.jooq.pokemon.db.tables.daos;


import com.onedata.jooq.pokemon.db.tables.Pokemon;
import com.onedata.jooq.pokemon.db.tables.records.PokemonRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;
import java.util.Optional;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PokemonDao extends DAOImpl<PokemonRecord, com.onedata.jooq.pokemon.db.tables.pojos.Pokemon, Integer> {

    /**
     * Create a new PokemonDao without any configuration
     */
    public PokemonDao() {
        super(Pokemon.POKEMON, com.onedata.jooq.pokemon.db.tables.pojos.Pokemon.class);
    }

    /**
     * Create a new PokemonDao with an attached configuration
     */
    public PokemonDao(Configuration configuration) {
        super(Pokemon.POKEMON, com.onedata.jooq.pokemon.db.tables.pojos.Pokemon.class, configuration);
    }

    @Override
    public Integer getId(com.onedata.jooq.pokemon.db.tables.pojos.Pokemon object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Pokemon.POKEMON.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchById(Integer... values) {
        return fetch(Pokemon.POKEMON.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.onedata.jooq.pokemon.db.tables.pojos.Pokemon fetchOneById(Integer value) {
        return fetchOne(Pokemon.POKEMON.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchOptionalById(Integer value) {
        return fetchOptional(Pokemon.POKEMON.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Pokemon.POKEMON.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchByName(String... values) {
        return fetch(Pokemon.POKEMON.NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Pokemon.POKEMON.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchByType(String... values) {
        return fetch(Pokemon.POKEMON.TYPE, values);
    }

    /**
     * Fetch records that have <code>hp BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchRangeOfHp(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Pokemon.POKEMON.HP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hp IN (values)</code>
     */
    public List<com.onedata.jooq.pokemon.db.tables.pojos.Pokemon> fetchByHp(Integer... values) {
        return fetch(Pokemon.POKEMON.HP, values);
    }
}
